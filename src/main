#!/bin/sh

# a profil name is the name of the directory
# it contains the respective scripts and/or files needed for this profile

configuration_manager_version=0.0.0
action=
action_arguments=

. "$src_dir"/create
. "$src_dir"/build
. "$src_dir"/utils
. "$src_dir"/activate

touch "$data_directory"/tmp.csv && awk -f "$src_dir"/data_verification.awk "$data_directory"/packages.csv > "$data_directory"/tmp.csv && mv "$data_directory"/tmp.csv "$data_directory"/packages.csv && rm -rf "$data_dirt"/tmp.csv

usage() {
    printf 'configuration-manager v%s\n' "${configuration_manager_version}"
    printf 'https://github.com/plagache/configuration-manager\n'
    echo
    printf 'Usage:  %s [OPTIONS]... ACTION\n' "$0"
    echo
    printf 'Supported actions:\n'
    printf '  create    Create the configuration\n'
    printf '  build     Build the configuration\n'
    printf '  active    Activate the configuration\n'
    printf '  diff      Compare configuration and system\n'
    echo
    printf 'Supported options:\n'
    printf '  -h, --help               Print this message\n'
    printf '  -c, --config DIR         Set the path to your configuration directory\n'
    printf '  -p, --profile NAME       Set the path to your configuration directory\n'
    printf '      --skip-config        Skip the configuration parsing step\n'
}

usage_error() {
    usage
    echo
    printf "%s\n" "$@"
    echo
    exit 2
}

main() {
    while [ "$#" -ne 0 ]; do
        case "$1" in
            create|build|active|diff)
                if [ -n "$action" ]; then
                    usage_error "An action has already been specified"
                fi
                action="$1"
                shift
                if [ "$action" = diff ]; then
                    action_arguments="$action_arguments $@"
                    break
                fi
                ;;
            -h|--help|help)
                usage
                exit 0
                ;;
            -c|--config)
                config_directory="$2"
                shift 2
                ;;
            -p|--profile)
                profile_name="$2"
                shift 2
                ;;
            *)
                usage_error "Unrecognized option: %s" "$1"
                ;;
        esac
    done

    # Action handling
    case "$action" in
        create)
            create
            ;;
        build)
            build
            ;;
        active)
            # show a list of profil to activate
            # printf '>> Activating profile: [%s]...\n\n' "$selected_profile"
            # activate "$selected_profile"
            ;;
        diff)
            printf '>> Diff profile...\n\n'
            ;;
        *)
            usage
            exit 2
            ;;
    esac

    exit 0
}

# Call Main with arguments
main "$@"
